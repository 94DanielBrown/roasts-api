// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/removeRoast/{roastID}": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roasts"
                ],
                "summary": "delete roast",
                "operationId": "delete-roast",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.message"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.message"
                        }
                    }
                }
            }
        },
        "/review": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "create review",
                "operationId": "create-review",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Review"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.message"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.message"
                        }
                    }
                }
            }
        },
        "/reviews/{roastID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "get reviews for a roast",
                "operationId": "get-roast-reviews",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Review"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/main.message"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.message"
                        }
                    }
                }
            }
        },
        "/roast/{roastID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roasts"
                ],
                "summary": "get a roast",
                "operationId": "get-roast",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Roast"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/main.message"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.message"
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roasts"
                ],
                "summary": "create a roast",
                "operationId": "create-roast",
                "parameters": [
                    {
                        "description": "Roast object that needs to be created",
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/database.Roast"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/database.Roast"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.message"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.message"
                        }
                    }
                }
            }
        },
        "/roasts": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roasts"
                ],
                "summary": "get all roasts",
                "operationId": "get-all-roasts",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Roast"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.message"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.message"
                        }
                    }
                }
            }
        },
        "/saveRoast": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "roasts"
                ],
                "summary": "save roast",
                "operationId": "save-roast",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/main.message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/main.message"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.message"
                        }
                    }
                }
            }
        },
        "/userReviews/{userID}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "reviews"
                ],
                "summary": "get a users reviews",
                "operationId": "get-user-reviews",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/database.Review"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/main.message"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/main.message"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "database.Review": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string"
                },
                "dateAdded": {
                    "type": "integer"
                },
                "displayName": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "gravyRating": {
                    "type": "integer"
                },
                "imageURL": {
                    "description": "When you update your image it needs to update it on all of the users reviews?\nLike wise if they want to change their displayname ......",
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "meatRating": {
                    "type": "integer"
                },
                "overallRating": {
                    "type": "integer"
                },
                "potatoesRating": {
                    "type": "integer"
                },
                "roastID": {
                    "type": "string"
                },
                "roastName": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                },
                "vegRating": {
                    "type": "integer"
                }
            }
        },
        "database.Roast": {
            "type": "object",
            "properties": {
                "gravyRating": {
                    "type": "number"
                },
                "id": {
                    "type": "string"
                },
                "imageURL": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "meatGravyRating": {
                    "type": "number"
                },
                "meatPotatoesGravyRating": {
                    "type": "number"
                },
                "meatPotatoesRating": {
                    "type": "number"
                },
                "meatPotatoesVegRating": {
                    "type": "number"
                },
                "meatRating": {
                    "type": "number"
                },
                "meatVegGravyRating": {
                    "type": "number"
                },
                "meatVegRating": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "overallRating": {
                    "description": "Average rating of 0 is omitted, frontend should take no result as an indication to display that there's no reviews yet",
                    "type": "number"
                },
                "potatoesGravyRating": {
                    "type": "number"
                },
                "potatoesRating": {
                    "type": "number"
                },
                "potatoesVegRating": {
                    "type": "number"
                },
                "priceRange": {
                    "type": "integer"
                },
                "reviewCount": {
                    "type": "integer"
                },
                "vegGravyRating": {
                    "type": "number"
                },
                "vegRating": {
                    "type": "number"
                }
            }
        },
        "main.message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}

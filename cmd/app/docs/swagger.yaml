definitions:
  database.Review:
    properties:
      comment:
        type: string
      dateAdded:
        type: integer
      displayName:
        type: string
      firstName:
        type: string
      gravyRating:
        type: integer
      imageURL:
        description: |-
          When you update your image it needs to update it on all of the users reviews?
          Like wise if they want to change their displayname ......
        type: string
      lastName:
        type: string
      meatRating:
        type: integer
      overallRating:
        type: integer
      potatoesRating:
        type: integer
      roastID:
        type: string
      roastName:
        type: string
      userID:
        type: string
      vegRating:
        type: integer
    type: object
  database.Roast:
    properties:
      gravyRating:
        type: number
      id:
        type: string
      imageURL:
        type: string
      location:
        type: string
      meatGravyRating:
        type: number
      meatPotatoesGravyRating:
        type: number
      meatPotatoesRating:
        type: number
      meatPotatoesVegRating:
        type: number
      meatRating:
        type: number
      meatVegGravyRating:
        type: number
      meatVegRating:
        type: number
      name:
        type: string
      overallRating:
        description: Average rating of 0 is omitted, frontend should take no result
          as an indication to display that there's no reviews yet
        type: number
      potatoesGravyRating:
        type: number
      potatoesRating:
        type: number
      potatoesVegRating:
        type: number
      priceRange:
        type: integer
      reviewCount:
        type: integer
      vegGravyRating:
        type: number
      vegRating:
        type: number
    type: object
  main.message:
    properties:
      message:
        type: string
    type: object
info:
  contact: {}
paths:
  /removeRoast/{roastID}:
    post:
      consumes:
      - application/json
      operationId: delete-roast
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.message'
      summary: delete roast
      tags:
      - roasts
  /review:
    post:
      consumes:
      - application/json
      operationId: create-review
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Review'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.message'
      summary: create review
      tags:
      - reviews
  /reviews/{roastID}:
    get:
      operationId: get-roast-reviews
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Review'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.message'
      summary: get reviews for a roast
      tags:
      - reviews
  /roast/{roastID}:
    get:
      operationId: get-roast
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Roast'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.message'
      summary: get a roast
      tags:
      - roasts
    post:
      consumes:
      - application/json
      operationId: create-roast
      parameters:
      - description: Roast object that needs to be created
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/database.Roast'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/database.Roast'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.message'
      summary: create a roast
      tags:
      - roasts
  /roasts:
    get:
      operationId: get-all-roasts
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Roast'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.message'
      summary: get all roasts
      tags:
      - roasts
  /saveRoast:
    post:
      consumes:
      - application/json
      operationId: save-roast
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/main.message'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/main.message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.message'
      summary: save roast
      tags:
      - roasts
  /userReviews/{userID}:
    get:
      operationId: get-user-reviews
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/database.Review'
            type: array
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/main.message'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/main.message'
      summary: get a users reviews
      tags:
      - reviews
swagger: "2.0"
